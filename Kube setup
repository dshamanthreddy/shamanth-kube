Kube Setup

swapoff -a 

#kube AMI

# master 
kubeadm init --pod-network-cidr=10.244.0.0/16

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
export KUBECONFIG=/etc/kubernetes/admin.conf

#pod network

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.9.1/Documentation/kube-flannel.yml

# Dashboard setup

kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml

kubectl proxy

# Change to NodePort 
kubectl -n kube-system edit service kubernetes-dashboard

kubectl -n kube-system get service kubernetes-dashboard

# Admin privileges

vim dashboard-admin.yaml

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dashboard
  labels:
    k8s-app: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard
  namespace: kube-system
  
  
properties you can set for a Container:

name
image
command
args
workingDir
ports
env
resources
volumeMounts
livenessProbe
readinessProbe
livecycle
terminationMessagePath
imagePullPolicy
securityContext
stdin
stdinOnce
tty
  
  
  
  
  
 ##--Horizontal Pod Autoscaler(
 (https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/#step-two-create-horizontal-pod-autoscaler
 https://blog.powerupcloud.com/autoscaling-based-on-cpu-memory-in-kubernetes-part-ii-fe2e495bddd4  )
 $ kubectl autoscale deployment $name --cpu-percent=50 --min=1 --max=10  
 $ kubectl get hpa
 
##--Rolling Updates with Kubernetes Deployments(https://tachingchen.com/blog/kubernetes-rolling-update-with-deployment/)


  
  
 Kubectl Commands
 
kubectl version  --short | grep -i server
kubeadm generate token
kubeadm token create xxxxxxxXXX --ttl 3h --print-join-command
kubectl scale --replicas=3
kubectl rollout history deployments
kubectl get deployment filename -o yaml > first.yaml   # to copy to external file
kubectl create --edit -f /tmp/first.yaml               # To edit file

$ kubectl cluster-info
$ kubectl get nodes
$ kubectl get componentstatuses
$ kubectl get pods -o wide --show-labels --all-namespaces
$ kubectl get svc  -o wide --show-labels --all-namespaces
kubectl config get-contexts
kubectl config view
kubectl get rolebindings


Logs
Master
/var/log/kube-apiserver.log - API Server, responsible for serving the API
/var/log/kube-scheduler.log - Scheduler, responsible for making scheduling decisions
/var/log/kube-controller-manager.log - Controller that manages replication controllers
Worker Nodes
/var/log/kubelet.log - Kubelet, responsible for running containers on the node
/var/log/kube-proxy.log - Kube Proxy, responsible for service load balancing


**************************Troubleshotting**************
journalctl -u etcd



#######################*HELM*COMMAND*################################
Helm Install name
Helm Delete name
Helm Status name
helm search
helm inspect chart  #To see what is inside



****************************etcd backup**************************
etcdctl  --help
export ETCDCTL_API=3
etcdctl snapshot --endpoints https://10.119.44.168:2379 
--cacert=/etc/kubernetes/pki/etcd/ca.pem 
--cert=/etc/kubernetes/pki/etcd/client.pem 
--key=/etc/kubernetes/pki/etcd/client-key.pem 
save /var/sp.db

etcdctl --write-out=table snapshot status /var/sp.db

*********************************DNS*********************************

kubectl exec -ti busybox -- nslookup kubernetes.default



*****************************kube links*************************************

https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.12/      -----------All v1.12 keywords
https://kubernetes.io/docs/tasks/federation/set-up-cluster-federation-kubefed/   ---------------Set up Cluster Federation with Kubefed

***Etcd Setup**** v1.10
https://v1-10.docs.kubernetes.io/docs/setup/independent/high-availability/
